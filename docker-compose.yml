version: '2.2'

services:
  # The application
  app:
    image: ghcr.io/biigle/app
    user: ${USER_ID}:${GROUP_ID}
    depends_on:
      - database
    build:
      dockerfile: .docker/app.dockerfile
      context: ./
    working_dir: /var/www
    volumes:
      - ./:/var/www
    environment:
      - "DB_PORT=5432"

  worker:
    image: ghcr.io/biigle/worker
    user: ${USER_ID}:${GROUP_ID}
    depends_on:
      - app
      - database_testing
    build:
      context: ./
      dockerfile: .docker/worker.dockerfile
    working_dir: /var/www
    volumes:
      - ./:/var/www
    tmpfs:
      - /tmp
      - /var/www/storage/framework/testing/disks:uid=${USER_ID},gid=${GROUP_ID}
    environment:
      - "DB_PORT=5432"
    init: true
    command: "php -d memory_limit=1G artisan queue:work --queue=high,default --sleep=5 --tries=3 --timeout=0"

  # gpu-worker:
  #   image: biigle/gpu-worker
  #   build:
  #     context: ./.docker/
  #     dockerfile: gpu-worker.dockerfile
  #   user: ${USER_ID}:${GROUP_ID}
  #   depends_on:
  #     - app
  #     - database_testing
  #   tmpfs:
  #     - /tmp
  #   volumes_from:
  #     - app
  #   ipc: host # Required for Torch multiprocessing
  #   environment:
  #     - "DB_PORT=5432"
  #   init: true
  #   command: "php -d memory_limit=1G artisan queue:work --sleep=5 --tries=1 --timeout=0 --queue=gpu"

  websockets:
    image: quay.io/soketi/soketi:1.4-16-alpine
    environment:
      - SOKETI_DEFAULT_APP_ID=${SOKETI_DEFAULT_APP_ID}
      - SOKETI_DEFAULT_APP_KEY=${SOKETI_DEFAULT_APP_KEY}
      - SOKETI_DEFAULT_APP_SECRET=${SOKETI_DEFAULT_APP_SECRET}
      - SOKETI_DEFAULT_APP_USER_AUTHENTICATION=1
      - SOKETI_SHUTDOWN_GRACE_PERIOD=3000
      - SOKETI_METRICS_ENABLED=0
      # - SOKETI_DEBUG=1

  # The web server
  web:
    image: ghcr.io/biigle/web
    depends_on:
      - app
      - websockets
    build:
      context: ./
      dockerfile: .docker/web.dockerfile
    working_dir: /var/www
    volumes:
      - ./:/var/www
    ports:
      - 8000:80
    command: nginx -g 'daemon off;' -c /etc/nginx/nginx-no-ssl.conf

  # The database
  database:
    image: ghcr.io/biigle/pgvector
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./:/data
    environment:
      - "POSTGRES_DB=biigle"
      - "POSTGRES_USER=biigle"
      - "POSTGRES_PASSWORD=secret"
    ports:
      - "54320:5432"

  database_testing:
    image: ghcr.io/biigle/pgvector
    tmpfs:
      - /var/lib/postgresql/data
    environment:
      - "POSTGRES_DB=biigle"
      - "POSTGRES_USER=biigle"
      - "POSTGRES_PASSWORD=secret"

volumes:
  dbdata:
